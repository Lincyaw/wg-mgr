name: Build VPN Tool

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform: [windows/amd64, windows/arm64, linux/amd64, linux/arm64, darwin/amd64, darwin/arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Set up platform variables
        id: platform
        run: |
          PLATFORM=${{ matrix.platform }}
          OS=$(echo $PLATFORM | cut -d'/' -f1)
          ARCH=$(echo $PLATFORM | cut -d'/' -f2)
          ARTIFACT_NAME=$(echo $PLATFORM | tr '/' '_')
          echo "OS=$OS" >> $GITHUB_ENV
          echo "ARCH=$ARCH" >> $GITHUB_ENV
          echo "ARTIFACT_NAME=$ARTIFACT_NAME" >> $GITHUB_ENV

      - name: Build for ${{ matrix.platform }}
        run: |
          make ${{ matrix.platform }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}-build
          path: build/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: build/

      - name: Create new tag
        id: create_tag
        env:
          GH_TOKEN: ${{ secrets.MYGITHUB_TOKEN }}
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          NEW_TAG="${TIMESTAMP}"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag $NEW_TAG
          git push https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}.git $NEW_TAG
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
      - name: Display structure of downloaded files
        run: ls -R
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.NEW_TAG }}
          files: build/*/*
        env:
          GITHUB_TOKEN: ${{ secrets.MYGITHUB_TOKEN }}